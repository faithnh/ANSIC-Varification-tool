.TH "Library/FlagDatabase.h" 3 "Tue Feb 1 2011" "Version 1.0" "ValidateStatementAdder" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Library/FlagDatabase.h \- 
.PP
このファイルは、本体に関するフラグ設定を格納するための命令が含まれている。 たとえば、xmlとして出力するとかなどといった設定が含まれている。  

.SH SYNOPSIS
.br
.PP
.SS "関数"

.in +1c
.ti -1c
.RI "int \fBgetFlagDatabase\fP (int argc, char *argv[])"
.br
.ti -1c
.RI "int \fBisXmlMode\fP (int flag_database)"
.br
.ti -1c
.RI "int \fBisHelpMode\fP (int flag_database)"
.br
.ti -1c
.RI "int \fBisArrayUnboundCheckMode\fP (int flag_database)"
.br
.ti -1c
.RI "int \fBisUndefineControlCheckMode\fP (int flag_database)"
.br
.ti -1c
.RI "int \fBisZeroDivitionCheckMode\fP (int flag_database)"
.br
.ti -1c
.RI "int \fBisFreeViolationCheckMode\fP (int flag_database)"
.br
.ti -1c
.RI "int \fBisProgramSlicingMode\fP (int flag_database)"
.br
.in -1c
.SH "説明"
.PP 
このファイルは、本体に関するフラグ設定を格納するための命令が含まれている。 たとえば、xmlとして出力するとかなどといった設定が含まれている。 

\fB作者:\fP
.RS 4
faithnh 
.RE
.PP

.SH "関数"
.PP 
.SS "int getFlagDatabase (intargc, char *argv[])"プログラムの引数からフラグデータベースを取得する。 ここで不正にフラグが設定されていた場合（存在しないフラグがある・フラグが二重に定義されている場合）、 エラーを返し、強制終了される。
.PP
\fB引数:\fP
.RS 4
\fIargc\fP 引数フラグの数 
.br
\fIargv\fP 引数フラグの文字列
.RE
.PP
\fB戻り値:\fP
.RS 4
引数から取得したフラグを取得する
.RE
.PP
プログラムの引数からフラグデータベースを取得する。 ここで不正にフラグが設定されていた場合（存在しないフラグがある・フラグが二重に定義されている場合）、 エラーを返し、強制終了される。
.PP
\fB引数:\fP
.RS 4
\fIargc\fP 引数フラグの数 
.br
\fIargv\fP 引数フラグの文字列
.RE
.PP
\fB戻り値:\fP
.RS 4
引数から取得したフラグを取得する。 
.RE
.PP

.SS "int isArrayUnboundCheckMode (intflag_database)"フラグデータベースから、ARRAY_UNBOUND_CHECK_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
ARRAY_UNBOUND_CHECK_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SS "int isFreeViolationCheckMode (intflag_database)"フラグデータベースから、FREE_VIOLATION_CHECK_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
FREE_VIOLATION_CHECK_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SS "int isHelpMode (intflag_database)"フラグデータベースから、HELP_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
HELP_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SS "int isProgramSlicingMode (intflag_database)"フラグデータベースから、PROGRAM_SLICING_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
PROGRAM_SLICING_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SS "int isUndefineControlCheckMode (intflag_database)"フラグデータベースから、UNDEFINE_CONTROL_CHECK_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
UNDEFINE_CONTROL_CHECK_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SS "int isXmlMode (intflag_database)"フラグデータベースから、XML_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
XML_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SS "int isZeroDivitionCheckMode (intflag_database)"フラグデータベースから、ZERO_DIVITION_CHECK_MODEが含まれているかどうか確認する。 
.PP
\fB引数:\fP
.RS 4
\fIflag_database\fP フラグデータベース
.RE
.PP
\fB戻り値:\fP
.RS 4
ZERO_DIVITION_CHECK_MODEが含まれていたら１を返し、そうでなければ０を返す。 
.RE
.PP

.SH "作者"
.PP 
ValidateStatementAdderのソースから Doxygen により生成しました。
